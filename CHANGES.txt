unreleased
==========

Backward Incompatibilities
--------------------------

 - Following the Pyramid deprecation period (1.6 -> 1.8),
   daemon support for pserve has been removed. This includes removing the
   daemon commands (start, stop, restart, status) as well as the following
   arguments:
   --daemon --pid-file --log-file --monitor-restart --status --user --group
   --stop-daemon

   To run your server as a daemon you should use a process manager instead of
   pserve.

   See https://github.com/Pylons/pyramid/pull/2615

- ``pcreate`` is now interactive by default. You will be prompted if it
  a file already exists with different content. Previously if there were
  similar files it would silently skip them unless you specified
  ``--interactive`` or ``--overwrite``.
  See https://github.com/Pylons/pyramid/pull/2775

Features
--------

- pcreate learned about --package-name to allow you to create a new project in
  an existing folder with a different package name than the project name. See
  https://github.com/Pylons/pyramid/pull/2783

- The `_get_credentials` private method of `BasicAuthAuthenticationPolicy`
  has been extracted into standalone function ``extract_http_basic_credentials`
  in `pyramid.authentication` module, this function extracts HTTP Basic
  credentials from a ``request`` object, and returns them as a named tuple.
  See https://github.com/Pylons/pyramid/pull/2662

- Pyramid 1.4 silently dropped a feature of the configurator that has been
  restored. It's again possible for action discriminators to conflict across
  different action orders.
  See https://github.com/Pylons/pyramid/pull/2757

- ``pyramid.paster.bootstrap`` and its sibling ``pyramid.scripting.prepare``
  can now be used as context managers to automatically invoke the ``closer``
  and pop threadlocals off of the stack to prevent memory leaks.
  See https://github.com/Pylons/pyramid/pull/2760

- Added ``pyramid.config.Configurator.add_exception_view`` and the
  ``pyramid.view.exception_view_config`` decorator. It is now possible using
  these methods or via the new ``exception_only=True`` option to ``add_view``
  to add a view which will only be matched when handling an exception.
  Previously any exception views were also registered for a traversal
  context that inherited from the exception class which prevented any
  exception-only optimizations.
  See https://github.com/Pylons/pyramid/pull/2660

- Added the ``exception_only`` boolean to
  ``pyramid.interfaces.IViewDeriverInfo`` which can be used by view derivers
  to determine if they are wrapping a view which only handles exceptions.
  This means that it is no longer necessary to perform request-time checks
  for ``request.exception`` to determine if the view is handling an exception
  - the pipeline can be optimized at config-time.
  See https://github.com/Pylons/pyramid/pull/2660

- ``pserve`` should now work with ``gevent`` and other workers that need
  to monkeypatch the process, assuming the server and / or the app do so
  as soon as possible before importing the rest of pyramid.
  See https://github.com/Pylons/pyramid/pull/2797

Bug Fixes
---------

- Fixed bug in `proutes` such that it now shows the correct view when a class
  and `attr` is involved.
  See: https://github.com/Pylons/pyramid/pull/2687

- Fix a ``FutureWarning`` in Python 3.5 when using ``re.split`` on the
  ``format`` setting to the ``proutes`` script.
  See https://github.com/Pylons/pyramid/pull/2714

- Fix a ``RuntimeWarning`` emitted by WebOb when using arbitrary objects
  as the ``userid`` in the ``AuthTktAuthenticationPolicy``. This is now caught
  by the policy and the object is serialized as a base64 string to avoid
  the cryptic warning. Since the userid will be read back as a string on
  subsequent requests a more useful warning is emitted encouraging you to
  use a primitive type instead.
  See https://github.com/Pylons/pyramid/pull/2715

- Pyramid 1.6 introduced the ability for an action to invoke another action.
  There was a bug in the way that ``config.add_view`` would interact with
  custom view derivers introduced in Pyramid 1.7 because the view's
  discriminator cannot be computed until view derivers and view predicates
  have been created in earlier orders. Invoking an action from another action
  would trigger an unrolling of the pipeline and would compute discriminators
  before they were ready. The new behavior respects the ``order`` of the action
  and ensures the discriminators are not computed until dependent actions
  from previous orders have executed.
  See https://github.com/Pylons/pyramid/pull/2757

Deprecations
------------

Documentation Changes
---------------------
- Add pyramid_nacl_session to session factories.
  See https://github.com/Pylons/pyramid/issues/2791

- Update HACKING.txt from stale branch that was never merged to master.
  See https://github.com/Pylons/pyramid/pull/2782

- Updated Windows installation instructions and related bits.
  See https://github.com/Pylons/pyramid/issues/2661

- Fix an inconsistency in the documentation between view predicates and
  route predicates and highlight the differences in their APIs.
  See https://github.com/Pylons/pyramid/pull/2764

- Clarify a possible misuse of the ``headers`` kwarg to subclasses of
  :class:`pyramid.httpexceptions.HTTPException` in which more appropriate
  kwargs from the parent class :class:`pyramid.response.Response` should be
  used instead. See https://github.com/Pylons/pyramid/pull/2750
